import Head from 'next/head'
import { Rubik } from 'next/font/google'
import { useState, useEffect } from'react'
import axios from 'axios'
import dynamic from "next/dynamic";
import React from "react";
// import API_KEY from "./config.js";

const rubik = Rubik({ subsets: ['latin'] })

export function ChangeView({ coords }) {
  const map = useMap();
  map.setView(coords, 12);
  return null;
}

export default function Home() {

  const [value, setValue] = useState("");
  const [ip, setIp] = useState("--");
  const [country, setCountry] = useState("--");
  const [region, setRegion] = useState("--");
  const [timezone, setTimezone] = useState("--");
  const [isp, setIsp] = useState("--");
  const [ lat, setLat] = useState("--");
  const [ lng, setLng] = useState("--");
  const API_KEY = "at_Mn48CScZfOWHr3ooGmQ8It6wCkKzB";

  const handleValue = (e) => {
    e.preventDefault();
    setValue(e.target.value);
  }

  
  const handleId = (e) => {
    e.preventDefault()
    setValue("")
    
    axios
      .get(
        // `https://api.ipgeolocation.io/ipgeo?apiKey=${API_KEY}=`+ {value}
        `https://geo.ipify.org/api/v2/country,city?apiKey=at_Mn48CScZfOWHr3ooGmQ8It6wCkKzB&ipAddress=${value}`
      )
      .then(function (response) {
        // if (value === response.data.as.domain) {
        //   console.log(response.data.as.domain);
        // }
        if (
          (value === response.data.ip && response.status === 200) ||
          value === ""
        ) {
          setIp(response.data.ip);
          setCountry(response.data.location.country);
          setRegion(response.data.location.region);
          setTimezone(response.data.location.timezone);
          setIsp(response.data.isp);
          console.log(response.data.location.lat);
          console.log(response.data.location.lng);
          console.log("ok");
          console.log(response);
          console.log(response.data.domains);
        } else {
          console.log(response);
          console.log(response.data);
          // alert("You have entered an invalid IP address!");
          return false;
        }
      });
  }

  const MapWithNoSSR = dynamic(() => import("../component/map"), {
    ssr: false,
  });


  return (
    <>
      <Head>
        <title>IP Address Tracker</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="wrapper"></div>
        <div id="map">
          <MapWithNoSSR lat={lat} lng={lng} />
        </div>
        <div className="container">
          <div className="row">
            <div className="col-12 d-flex flex-column gap-md-5 gap-2 align-items-center">
              <div className="col-12 d-flex flex-column mt-5 gap-3 align-items-center">
                <h1 className="text-center text-white">IP Address Tracker</h1>
                <div className="col-12 col-md-8">
                  <form
                    className="input-group mb-3 searchIDGroup"
                    onSubmit={handleId}
                  >
                    <input
                      type="text"
                      className="form-control searchID"
                      placeholder="Search for any IP address or domain"
                      aria-label="Recipient's username"
                      aria-describedby="button-addon2"
                      value={value}
                      onChange={handleValue}
                    />
                    <button
                      className="btn btn-secondary"
                      type="button"
                      onClick={handleId}
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="16"
                        height="16"
                        fill="currentColor"
                        className="bi bi-chevron-right"
                        viewBox="0 0 16 16"
                      >
                        <path
                          fillRule="evenodd"
                          d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"
                        />
                      </svg>
                    </button>
                  </form>
                </div>
              </div>
              <div className="d-flex flex-column flex-lg-row bg-white info col-12 col-md-11 justify-content-between">
                <div className="d-flex flex-column gap-lg-3 gap-1 infoBlock">
                  <small className="text-center text-lg-start">
                    IP ADDRESS
                  </small>
                  <h2 className="text-center text-lg-start">{ip}</h2>
                </div>
                <div className="vr my-3 d-none d-lg-block"></div>
                <div className="d-flex flex-column gap-lg-3 gap-1 infoBlock">
                  <small className="text-center text-lg-start">LOCATION</small>
                  <h2 className="text-center text-lg-start">
                    {country}, {region}
                  </h2>
                </div>
                <div className="vr my-3 d-none d-lg-block"></div>
                <div className="d-flex flex-column gap-lg-3 gap-1 infoBlock">
                  <small className="text-center text-lg-start">TIMEZONE</small>
                  <h2 className="text-center text-lg-start">UTC{timezone}</h2>
                </div>
                <div className="vr my-3 d-none d-lg-block"></div>
                <div className="d-flex flex-column gap-lg-3 gap-1 infoBlock">
                  <small className="text-center text-lg-start">ISP</small>
                  <h2 className="text-center text-lg-start">{isp}</h2>
                </div>
              </div>
            </div>
          </div>
        </div>
      </main>
    </>
  );
}
